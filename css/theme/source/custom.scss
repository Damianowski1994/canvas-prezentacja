/**
 * Blood theme for reveal.js
 * Author: Walther http://github.com/Walther
 *
 * Designed to be used with highlight.js theme
 * "monokai_sublime.css" available from
 * https://github.com/isagalaev/highlight.js/
 *
 * For other themes, change $codeBackground accordingly.
 *
 */

// Default mixins and settings -----------------
@import "../template/mixins";
@import "../template/settings";
// ---------------------------------------------

// Include theme-specific fonts

@import url("https://fonts.googleapis.com/css?family=Raleway:900");
@import url("https://fonts.googleapis.com/css2?family=Roboto:ital@1&display=swap");
@import url("https://fonts.googleapis.com/css?family=Caveat|Righteous&display=swap");

// Colors used in the theme
$blood: #a23;
$coal: #222;
$codeBackground: #23241f;

$backgroundColor: $coal;

// Main text
$mainFont: Ubuntu, "sans-serif";
$mainColor: #eee;

// Headings
$headingFont: Ubuntu, "sans-serif";
$headingTextShadow: 2px 2px 2px $coal;

// h1 shadow, borrowed humbly from
// (c) Default theme by Hakim El Hattab
$heading1TextShadow: 0 1px 0 #ccc, 0 2px 0 #c9c9c9, 0 3px 0 #bbb,
  0 4px 0 #b9b9b9, 0 5px 0 #aaa, 0 6px 1px rgba(0, 0, 0, 0.1),
  0 0 5px rgba(0, 0, 0, 0.1), 0 1px 3px rgba(0, 0, 0, 0.3),
  0 3px 5px rgba(0, 0, 0, 0.2), 0 5px 10px rgba(0, 0, 0, 0.25),
  0 20px 20px rgba(0, 0, 0, 0.15);

// Links
$linkColor: $blood;
$linkColorHover: lighten($linkColor, 20%);

// Text selection
$selectionBackgroundColor: $blood;
$selectionColor: #fff;

// Change text colors against dark slide backgrounds
@include light-bg-text-color(#222);

// Theme template ------------------------------
@import "../template/theme";
// ---------------------------------------------

// some overrides after theme template import

.reveal p {
  font-weight: 300;
  text-shadow: 1px 1px $coal;
}

section.has-light-background {
  p,
  h1,
  h2,
  h3,
  h4 {
    text-shadow: none;
  }
}

.reveal h1,
.reveal h2,
.reveal h3,
.reveal h4,
.reveal h5,
.reveal h6 {
  font-weight: 700;
}

.reveal p code {
  background-color: $codeBackground;
  display: inline-block;
  border-radius: 7px;
}

.reveal small code {
  vertical-align: baseline;
}

.slide {
  // background: linear-gradient(-45deg, #ee7752, #e73c7e, #23a6d5, #23d5ab);
  // background-size: 400% 400%;
  // animation: gradient 15s ease infinite;
  background-color: #fff;
}

@keyframes gradient {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

.about-canvas {
  h2 {
    color: #3eb595;
  }
}

.how-it-works {
  section {
    color: #fff;
  }
}

.color {
  background-color: #fff;
}

.color-1 {
  background-color: #0093e9;
  background-image: linear-gradient(160deg, #0093e9 0%, #80d0c7 100%);
}

.color-2 {
  background-color: #4158d0;
  background-image: linear-gradient(
    43deg,
    #4158d0 0%,
    #c850c0 46%,
    #ffcc70 100%
  );
}

.color-3 {
  background: #c31432; /* fallback for old browsers */
  background: -webkit-linear-gradient(
    to right,
    #c31432,
    #240b36
  ); /* Chrome 10-25, Safari 5.1-6 */
  background: linear-gradient(to right, #c31432, #240b36);
}

#wrapper {
  background: url(https://media.giphy.com/media/FE0WTM8BG754I/giphy.gif) center
    center no-repeat;
  background-size: cover;
  width: 100%;
  height: 28vh;
  //   overflow: hidden;
  margin: 26vh 0;
  position: relative;
}
#wrapper h2 {
  font-family: "Raleway", sans-serif;
  font-size: 26vh;
  font-weight: 700;
  text-align: center;
  text-transform: uppercase;
  position: absolute;
  top: 50%;
  left: 0;
  right: 0;
  margin: auto;
  transform: translateY(-50%);
  word-wrap: break-word;
}

#wrapper .transparent-text {
  background-color: #fff;
  color: #000;
  /* the magic property */
  mix-blend-mode: screen;
}

.section__wrapper.about-canvas p {
  color: #0000 !important;
}

.usage {
  font-family: "Roboto";
  color: #fff;
}

#wrapper p {
  position: absolute;
  // left: 50%;
  right: 0;
  font-size: 6vh;
  bottom: -15vh;
  font-family: "Caveat", cursive;
}

#chart-wrapper {
  display: flex;
  justify-content: space-between;
  font-family: "Caveat", cursive;

  aside {
    float: left;
    margin-right: 100px;
  }
  .chart {
    margin-bottom: 0;
    margin-top: 0;
  }
  .vert > canvas,
  .vert > ol {
    display: inline-block;
  }
  .horiz > li {
    display: inline;
    padding-right: 20px;
  }
  .legend {
    vertical-align: top;
    padding-left: 15px;
    list-style: none;
  }
  .key {
    position: relative;
  }
  .key:before {
    content: "";
    position: absolute;
    top: 35%;
    left: -15px;
    width: 10px;
    height: 10px;
  }
  .one:before {
    background: rgb(236, 208, 120);
  }
  .two:before {
    background: rgba(217, 91, 67, 0.7);
  }
  .three:before {
    background: rgba(192, 41, 66, 0.7);
  }
  .four:before {
    background: rgba(84, 36, 55, 0.7);
  }
  .five:before {
    background: rgba(83, 119, 122, 0.7);
  }
  .six:before {
    background: rgba(119, 146, 174, 0.7);
  }
}

section.font-light h2 {
  color: #fff;
}

@import url("https://fonts.googleapis.com/css2?family=Pacifico&display=swap");
html {
  font-size: calc(100vmax / 1500 * 100);
}
body {
  height: 100vh;
  background-color: #e2aa01;
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
}
.title {
  font-family: "Pacifico", cursive;
  font-size: clamp(36px, 0.6rem, 100px);
  color: #fff;
  text-shadow: 6px 4px #735b13;
}
[class^="firework-"] {
  position: absolute;
  width: 0.1rem;
  height: 0.1rem;
  border-radius: 50%;
}

$count: 15;
$frame-list: firework-sm, firework-md, firework-lg;
@for $i from 1 through $count {
  .firework-#{$i} {
    animation: nth($frame-list, random(3)) 1.2s both infinite;
    animation-delay: #{random($count) * 0.1}s;
    top: random(16) * 5% + 10%;
    left: random(16) * 5% + 10%;
  }
}

// dots generator
@function dots($r) {
  $result: ();
  // straight
  @for $i from 1 through 4 {
    $x: 0;
    $y: 0;
    @if $i <= 2 {
      $x: $r;
    } @else {
      $y: $r;
    }
    @if $i % 2 != 0 {
      $x: -$x;
      $y: -$y;
    }
    $result: append($result, #{$x}rem #{$y}rem 0 #fff, comma);
  }
  // diagonal
  @for $i from 1 through 4 {
    $dist2: $r * 0.7;
    $x: $dist2;
    $y: $dist2;
    @if $i > 2 {
      $x: -$x;
    }
    @if $i % 2 != 0 {
      $y: -$y;
    }
    $result: append($result, #{$x}rem #{$y}rem 0 #fff, comma);
  }
  @return $result;
}

// firework animation
@mixin fireworkSize($name, $r) {
  @keyframes firework-#{$name} {
    0%,
    100% {
      opacity: 0;
    }
    10%,
    70% {
      opacity: 1;
    }
    100% {
      box-shadow: dots($r);
    }
  }
}
@include fireworkSize(sm, 0.5);
@include fireworkSize(md, 0.7);
@include fireworkSize(lg, 0.9);
